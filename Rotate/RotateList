/*
 * Given a list, rotate the list to the right by k places, where k is non-negative.
 * For example:
 * Given 1->2->3->4->5->NULL and k = 2,
 * return 4->5->1->2->3->NULL.
 *解题思路：
 这道题要搞懂题目的意思就可以了
 */
 
 class Solution {
public:
    ListNode *rotateRight(ListNode *head, int k) {
        ListNode* tmp = head;
        ListNode* LastNode = head;
        if (!head || !head->next || k < 0)
            return head;
        int iListLength =0;
        while (tmp){
            ++iListLength;
            LastNode = tmp;
            tmp = tmp->next;

        }
        
        int iExactPos = k%iListLength;
        if (iExactPos == 0)
            return head;
        iExactPos = iListLength - iExactPos -1;
        tmp = head;
        while (iExactPos){
            tmp = tmp->next;
            --iExactPos;
        }
        
       LastNode->next = head;
       head = tmp->next;
       tmp->next = NULL;
       
       return head;
        
        
    }
};
