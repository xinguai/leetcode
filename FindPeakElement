/*
 *A peak element is an element that is greater than its neighbors.

Given an input array where num[i] ≠ num[i+1], find a peak element and return its index.

The array may contain multiple peaks, in that case return the index to any one of the peaks is fine.

You may imagine that num[-1] = num[n] = -∞.

For example, in array [1, 2, 3, 1], 3 is a peak element and your function should return the index number 2.
* 解题思路：
1、二分查找，局部最大值。
2、如果mid < mid +1 在它的右边有一个局部最大值
3、否则，在它的左边有一个局部最大值。
4、因为有一个条件num[i] != num[i+1]
 */
 
 class Solution {
public:
    int findPeakElement(const vector<int> &num) {
        int n = num.size();
        int left = 0, right = n -1;
        
        while (left <= right){
            if (left == right)
                return left;
            int mid = (left + right)/2;
            if (num[mid] < num[mid + 1])
                left = mid + 1;
            else
                right = mid;
        }
    }
};
