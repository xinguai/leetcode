/*
 * Partition List 
 * Given a linked list and a value x, partition it such that all nodes less than x come before nodes 
 * greater than or equal to x.
 * You should preserve the original relative order of the nodes in each of the two partitions.
 解题思路：
  分成两个链接，比x大的和比x小的，然后将两个链表合并返回
 */
 
 /**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *partition(ListNode *head, int x) {
        ListNode great_head(0), *gtHead = &great_head;
        ListNode less_head(0),  *leHead = &less_head;
        
        while (head){
            if (head->val < x){
                leHead->next = head;
                leHead = leHead->next;
            }
            else{
                gtHead->next = head;
                gtHead = gtHead->next;
            }
            head = head->next;
        }
        
        gtHead->next = NULL;
        leHead->next = great_head.next;
        return less_head.next;
    }
};
